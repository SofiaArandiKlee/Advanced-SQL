-- Inspect the table
SELECT * 
FROM state_climate
LIMIT 10;

-- Query the average temperature changes over time in each state.
SELECT state, year, tempf, tempc, AVG(tempc) OVER(PARTITION BY state ORDER BY year) AS 'running_avg_tempc'
FROM state_climate;

-- Query the lowest temperatures for each state.
SELECT state, year, tempf, tempc, FIRST_VALUE(tempc)
OVER(PARTITION BY state ORDER BY tempc) AS 'lowest_tempc'
FROM state_climate;

-- Query the highest temperature for each state.
SELECT state, year, tempf, tempc, LAST_VALUE(tempc)
OVER(PARTITION BY state ORDER BY tempc RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS 'highest_tempc'
FROM state_climate;

-- Query the change in temperature grouped by year and state.
SELECT state, year, tempf, tempc, 
tempc - LAG(tempc, 1,tempc) OVER(PARTITION BY state ORDER BY year) AS 'change_in_temp'
FROM state_climate
ORDER BY change_in_temp DESC;

-- Rank the coldest temperatures on record.
SELECT RANK() OVER(ORDER BY tempc) AS coldest_rank, state, year, tempf, tempc
FROM state_climate
LIMIT 10;

-- Rank the warmest temperatures on record.
SELECT RANK() OVER(ORDER BY tempc DESC) AS warmest_rank, state, year, tempf, tempc
FROM state_climate
LIMIT 10;

-- Query the average yearly temperatures in quartiles instead of in rankings for each state.
SELECT NTILE(4) OVER(PARTITION BY state ORDER BY tempc) AS 'quartile', state, year, tempf, tempc
FROM state_climate;

-- Query the average yearly temperatures in quintiles (5) in this case should be the coldest years overall, not by state.
SELECT NTILE(5) OVER(ORDER BY tempc) AS 'quintile', state, year, tempf, tempc
FROM state_climate;





